2024-09-18 11:18:25,544 - api.v1.endpoints.example_post - INFO - Received request with data: 大樓工程中的假設工程中的子工程，施工便道工程需要的檢查表有哪些？
2024-09-18 11:18:25,961 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'headers': {'api-key': 'b6133f8c130a4d659443d29871845c80'}, 'files': None, 'json_data': {'messages': [{'content': '請你將使用者輸入的字串提取關鍵字，請不要更改句子中的字，以下是範例 \n                Example1:\n                    使用者:"大樓工程中的假設工程中的子工程，基地整地需要的一般其他類檢查標準有哪些？"\n                    關鍵字: [\'大樓工程\', \'假設工程\', \'基地整地\', \'一般其他類\']\n                Example2:\n                    使用者:"大樓工程中的假設工程中的子工程，施工便道工程需要的墜落防止檢查標準有哪些？"\n                    關鍵字: [\'大樓工程\', \'假設工程\', \'施工便道工程\', \'墜落防止\']\n                Example3:\n                    使用者:"大樓工程中的假設工程，需要做的子工程順序？"\n                    關鍵字: [\'大樓工程\', \'假設工程\', \'施工便道工程\', \'墜落防止\']\n                Example4:\n                    使用者:"大樓工程中的假設工程中的子工程，支撐架需要的檢查表有哪些？"\n                    關鍵字: [\'大樓工程\', \'假設工程\', \'支撐架\']\n                Example5:\n                    使用者:"在大樓工程中的假設工程，哪些工程需要類別為環境保護的檢查標準?"\n                    關鍵字: [\'大樓工程\', \'假設工程\', \'環境保護\']\n                , 請將關鍵字以list形式輸出，只要輸出list就好', 'role': 'system'}, {'content': '大樓工程中的假設工程中的子工程，施工便道工程需要的檢查表有哪些？', 'role': 'user'}], 'model': 'gpt-3.5-turbo', 'logprobs': False, 'n': 1, 'stream': False, 'temperature': 0.3}}
2024-09-18 11:18:26,034 - openai._base_client - DEBUG - Sending HTTP Request: POST https://generevo-eastus-oai.openai.azure.com//openai/deployments/gpt-4o/chat/completions?api-version=2024-02-01
2024-09-18 11:18:26,035 - httpcore.connection - DEBUG - connect_tcp.started host='generevo-eastus-oai.openai.azure.com' port=443 local_address=None timeout=None socket_options=None
2024-09-18 11:18:26,285 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x111b12420>
2024-09-18 11:18:26,285 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x1107e92d0> server_hostname='generevo-eastus-oai.openai.azure.com' timeout=None
2024-09-18 11:18:26,733 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x111b125a0>
2024-09-18 11:18:26,734 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-09-18 11:18:26,734 - httpcore.http11 - DEBUG - send_request_headers.complete
2024-09-18 11:18:26,735 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-09-18 11:18:26,735 - httpcore.http11 - DEBUG - send_request_body.complete
2024-09-18 11:18:26,735 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-09-18 11:18:27,201 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Content-Length', b'1023'), (b'Content-Type', b'application/json'), (b'x-ms-region', b'East US'), (b'apim-request-id', b'ab4eebd0-746d-4319-9f0c-b6fde7d86596'), (b'x-ratelimit-remaining-requests', b'7'), (b'x-accel-buffering', b'no'), (b'x-ms-rai-invoked', b'true'), (b'x-request-id', b'8b680dee-f696-468a-ba1c-707cfbde64ec'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'azureml-model-session', b'd034-20240902055746'), (b'x-content-type-options', b'nosniff'), (b'x-envoy-upstream-service-time', b'268'), (b'x-ms-client-request-id', b'ab4eebd0-746d-4319-9f0c-b6fde7d86596'), (b'x-ratelimit-remaining-tokens', b'7701'), (b'Date', b'Wed, 18 Sep 2024 03:18:26 GMT')])
2024-09-18 11:18:27,203 - httpx - INFO - HTTP Request: POST https://generevo-eastus-oai.openai.azure.com//openai/deployments/gpt-4o/chat/completions?api-version=2024-02-01 "HTTP/1.1 200 OK"
2024-09-18 11:18:27,203 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-09-18 11:18:27,203 - httpcore.http11 - DEBUG - receive_response_body.complete
2024-09-18 11:18:27,203 - httpcore.http11 - DEBUG - response_closed.started
2024-09-18 11:18:27,204 - httpcore.http11 - DEBUG - response_closed.complete
2024-09-18 11:18:27,204 - openai._base_client - DEBUG - HTTP Response: POST https://generevo-eastus-oai.openai.azure.com//openai/deployments/gpt-4o/chat/completions?api-version=2024-02-01 "200 OK" Headers({'content-length': '1023', 'content-type': 'application/json', 'x-ms-region': 'East US', 'apim-request-id': 'ab4eebd0-746d-4319-9f0c-b6fde7d86596', 'x-ratelimit-remaining-requests': '7', 'x-accel-buffering': 'no', 'x-ms-rai-invoked': 'true', 'x-request-id': '8b680dee-f696-468a-ba1c-707cfbde64ec', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'azureml-model-session': 'd034-20240902055746', 'x-content-type-options': 'nosniff', 'x-envoy-upstream-service-time': '268', 'x-ms-client-request-id': 'ab4eebd0-746d-4319-9f0c-b6fde7d86596', 'x-ratelimit-remaining-tokens': '7701', 'date': 'Wed, 18 Sep 2024 03:18:26 GMT'})
2024-09-18 11:18:27,204 - openai._base_client - DEBUG - request_id: 8b680dee-f696-468a-ba1c-707cfbde64ec
2024-09-18 11:18:27,643 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'headers': {'api-key': '4e80a35088e24d8d9960c005a0626b69'}, 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x111b2db20>, 'json_data': {'input': [[27384, 162, 101, 241, 49792, 39607, 16325, 9554, 49691, 229, 29245, 255, 49792, 39607, 86206, 49691, 248, 9554, 49792, 39607, 163, 224, 118, 99849, 11571], [27384, 162, 101, 241, 49792, 39607, 16325, 9554, 49691, 229, 29245, 255, 49792, 39607, 16325, 9554, 45829, 49792, 39607, 3922, 26274, 101, 39177, 11883, 25132, 119, 86206, 9554, 162, 103, 95, 33976, 21405, 19361, 20648, 103, 98184, 11571], [27384, 162, 101, 241, 49792, 39607, 16325, 9554, 49691, 229, 29245, 255, 49792, 39607, 16325, 9554, 45829, 49792, 39607, 3922, 51385, 37087, 28425, 108, 25766, 232, 49792, 39607, 86206, 9554, 162, 103, 95, 33976, 21405, 19361, 20648, 103, 98184, 11571], [27384, 162, 101, 241, 49792, 39607, 16325, 9554, 49691, 229, 29245, 255, 49792, 39607, 16325, 9554, 45829, 49792, 39607, 3922, 6, 51385, 37087, 12554, 235, 19630, 105, 49792, 39607, 6, 86206, 49691, 248, 9554, 162, 103, 95, 33976, 19361, 20648, 103, 98184, 11571], [27384, 162, 101, 241, 49792, 39607, 16325, 9554, 49691, 229, 29245, 255, 49792, 39607, 16325, 9554, 45829, 49792, 39607, 3922, 6, 51385, 37087, 12554, 235, 19630, 105, 49792, 39607, 6, 86206, 9554, 14167, 252, 6701, 98, 6, 15120, 63105, 105, 93994, 14167, 252, 162, 103, 95, 33976, 6, 19361, 20648, 103, 98184, 11571], [27384, 162, 101, 241, 49792, 39607, 16325, 9554, 49691, 229, 29245, 255, 49792, 39607, 16325, 9554, 45829, 49792, 39607, 3922, 86206, 6, 26274, 101, 39177, 163, 92871, 31958, 320, 9080, 6708, 231, 163, 229, 230, 22367, 162, 103, 95, 33976, 162, 101, 247, 36117, 244, 9554, 49792, 39607, 19361, 20648, 103, 98184, 11571], [27384, 162, 101, 241, 49792, 39607, 16325, 9554, 49691, 229, 29245, 255, 49792, 39607, 16325, 9554, 45829, 49792, 39607, 80988, 228, 33144, 163, 224, 118, 99849, 11571], [27384, 162, 101, 241, 49792, 39607, 16325, 9554, 49691, 229, 29245, 255, 49792, 39607, 16325, 9554, 45829, 49792, 39607, 3922, 24326, 121, 61056, 19817, 101, 17297, 15120, 20022, 233, 49792, 39607, 163, 224, 118, 99849, 11571], [19000, 6, 27384, 162, 101, 241, 49792, 39607, 6, 16325, 9554, 6, 49691, 229, 29245, 255, 49792, 39607, 6, 3922, 20648, 103, 98184, 49792, 39607, 86206, 6, 26274, 101, 39177, 11883, 25132, 119, 320, 53610, 165, 232, 222, 163, 229, 230, 22367, 162, 103, 95, 33976, 162, 101, 247, 36117, 244, 30], [19000, 6, 27384, 162, 101, 241, 49792, 39607, 6, 16325, 9554, 6, 49691, 229, 29245, 255, 49792, 39607, 6, 3922, 20648, 103, 98184, 49792, 39607, 86206, 14167, 252, 6701, 98, 163, 224, 118, 6, 15120, 63105, 105, 93994, 14167, 252, 6, 9554, 162, 103, 95, 33976, 162, 101, 247, 36117, 244, 30]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
2024-09-18 11:18:27,644 - openai._base_client - DEBUG - Sending HTTP Request: POST https://aiii-openai-service.openai.azure.com//openai/deployments/ada/embeddings?api-version=2023-05-15
2024-09-18 11:18:27,645 - httpcore.connection - DEBUG - connect_tcp.started host='aiii-openai-service.openai.azure.com' port=443 local_address=None timeout=None socket_options=None
2024-09-18 11:18:27,775 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x118aeb050>
2024-09-18 11:18:27,775 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x1108048d0> server_hostname='aiii-openai-service.openai.azure.com' timeout=None
2024-09-18 11:18:27,866 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x118aeb350>
2024-09-18 11:18:27,866 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-09-18 11:18:27,866 - httpcore.http11 - DEBUG - send_request_headers.complete
2024-09-18 11:18:27,866 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-09-18 11:18:27,867 - httpcore.http11 - DEBUG - send_request_body.complete
2024-09-18 11:18:27,867 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-09-18 11:18:27,968 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Content-Length', b'82884'), (b'Content-Type', b'application/json'), (b'access-control-allow-origin', b'*'), (b'apim-request-id', b'25b3d4bb-557b-4be3-878b-64b7da254941'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'x-content-type-options', b'nosniff'), (b'x-ms-region', b'Japan East'), (b'x-request-id', b'01a19367-d5fb-4a83-94ee-2185b0965350'), (b'x-ms-client-request-id', b'25b3d4bb-557b-4be3-878b-64b7da254941'), (b'x-ratelimit-remaining-requests', b'349'), (b'azureml-model-session', b'd012-20240618000213'), (b'x-ratelimit-remaining-tokens', b'349581'), (b'Date', b'Wed, 18 Sep 2024 03:18:27 GMT')])
2024-09-18 11:18:27,968 - httpx - INFO - HTTP Request: POST https://aiii-openai-service.openai.azure.com//openai/deployments/ada/embeddings?api-version=2023-05-15 "HTTP/1.1 200 OK"
2024-09-18 11:18:27,969 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-09-18 11:18:28,044 - httpcore.http11 - DEBUG - receive_response_body.complete
2024-09-18 11:18:28,045 - httpcore.http11 - DEBUG - response_closed.started
2024-09-18 11:18:28,045 - httpcore.http11 - DEBUG - response_closed.complete
2024-09-18 11:18:28,045 - openai._base_client - DEBUG - HTTP Response: POST https://aiii-openai-service.openai.azure.com//openai/deployments/ada/embeddings?api-version=2023-05-15 "200 OK" Headers({'content-length': '82884', 'content-type': 'application/json', 'access-control-allow-origin': '*', 'apim-request-id': '25b3d4bb-557b-4be3-878b-64b7da254941', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'x-ms-region': 'Japan East', 'x-request-id': '01a19367-d5fb-4a83-94ee-2185b0965350', 'x-ms-client-request-id': '25b3d4bb-557b-4be3-878b-64b7da254941', 'x-ratelimit-remaining-requests': '349', 'azureml-model-session': 'd012-20240618000213', 'x-ratelimit-remaining-tokens': '349581', 'date': 'Wed, 18 Sep 2024 03:18:27 GMT'})
2024-09-18 11:18:28,045 - openai._base_client - DEBUG - request_id: 01a19367-d5fb-4a83-94ee-2185b0965350
2024-09-18 11:18:28,069 - faiss.loader - DEBUG - Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU
2024-09-18 11:18:28,069 - faiss.loader - INFO - Loading faiss with AVX2 support.
2024-09-18 11:18:28,162 - faiss.loader - INFO - Successfully loaded faiss with AVX2 support.
2024-09-18 11:18:28,283 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/embeddings', 'headers': {'api-key': '4e80a35088e24d8d9960c005a0626b69'}, 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x111c720c0>, 'json_data': {'input': [[27384, 162, 101, 241, 49792, 39607, 16325, 9554, 49691, 229, 29245, 255, 49792, 39607, 16325, 9554, 45829, 49792, 39607, 3922, 7741, 121, 49792, 20135, 123, 45893, 49792, 39607, 86206, 9554, 162, 103, 95, 33976, 21405, 19361, 20648, 103, 98184, 95532, 6827, 2929, 25, 220]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
2024-09-18 11:18:28,283 - openai._base_client - DEBUG - Sending HTTP Request: POST https://aiii-openai-service.openai.azure.com//openai/deployments/ada/embeddings?api-version=2023-05-15
2024-09-18 11:18:28,284 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-09-18 11:18:28,284 - httpcore.http11 - DEBUG - send_request_headers.complete
2024-09-18 11:18:28,285 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-09-18 11:18:28,285 - httpcore.http11 - DEBUG - send_request_body.complete
2024-09-18 11:18:28,285 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-09-18 11:18:28,354 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Content-Length', b'8416'), (b'Content-Type', b'application/json'), (b'access-control-allow-origin', b'*'), (b'apim-request-id', b'26078b90-0499-47b5-8178-2a796db3b696'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'x-content-type-options', b'nosniff'), (b'x-ms-region', b'Japan East'), (b'x-request-id', b'aaa113cc-b451-4d19-b068-b36c1cbe6c73'), (b'x-ms-client-request-id', b'26078b90-0499-47b5-8178-2a796db3b696'), (b'x-ratelimit-remaining-requests', b'348'), (b'azureml-model-session', b'd011-20240617231847'), (b'x-ratelimit-remaining-tokens', b'349537'), (b'Date', b'Wed, 18 Sep 2024 03:18:28 GMT')])
2024-09-18 11:18:28,355 - httpx - INFO - HTTP Request: POST https://aiii-openai-service.openai.azure.com//openai/deployments/ada/embeddings?api-version=2023-05-15 "HTTP/1.1 200 OK"
2024-09-18 11:18:28,355 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-09-18 11:18:28,355 - httpcore.http11 - DEBUG - receive_response_body.complete
2024-09-18 11:18:28,356 - httpcore.http11 - DEBUG - response_closed.started
2024-09-18 11:18:28,356 - httpcore.http11 - DEBUG - response_closed.complete
2024-09-18 11:18:28,356 - openai._base_client - DEBUG - HTTP Response: POST https://aiii-openai-service.openai.azure.com//openai/deployments/ada/embeddings?api-version=2023-05-15 "200 OK" Headers({'content-length': '8416', 'content-type': 'application/json', 'access-control-allow-origin': '*', 'apim-request-id': '26078b90-0499-47b5-8178-2a796db3b696', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'x-ms-region': 'Japan East', 'x-request-id': 'aaa113cc-b451-4d19-b068-b36c1cbe6c73', 'x-ms-client-request-id': '26078b90-0499-47b5-8178-2a796db3b696', 'x-ratelimit-remaining-requests': '348', 'azureml-model-session': 'd011-20240617231847', 'x-ratelimit-remaining-tokens': '349537', 'date': 'Wed, 18 Sep 2024 03:18:28 GMT'})
2024-09-18 11:18:28,357 - openai._base_client - DEBUG - request_id: aaa113cc-b451-4d19-b068-b36c1cbe6c73
2024-09-18 11:18:28,377 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'headers': {'api-key': 'b6133f8c130a4d659443d29871845c80'}, 'files': None, 'json_data': {'messages': [{'content': 'You are a mysql expert. Given an input question, create a syntactically correct mysql query to run.\n                Unless the user specifies in the question a specific number of examples to obtain, query for at most 100 results using the LIMIT clause as per mysql. You can order the results to return the most informative data in the database.\n                Never query for all columns from a table. You must query only the columns that are needed to answer the question. \n                Pay attention to use only the column names you can see in the tables below. Be careful to not query for columns that do not exist. Also, pay attention to which column is in which table.\n                Pay attention to use date(\'now\') function to get the current date, if the question involves "today". Also, if the user request to query with a specific string match, please make sure in the database, there\'s value similar to the string when the user has a typo. Lastly, you are only\n                able to use "SELECT" keyword. You can\'t modify the database!\n\n                Only use the following tables:\n                \nCREATE TABLE `CheckingDocs` (\n\t`ID` INTEGER NOT NULL AUTO_INCREMENT, \n\t`Name` VARCHAR(100) NOT NULL, \n\t`Link` VARCHAR(2048), \n\tPRIMARY KEY (`ID`)\n)COLLATE utf8mb4_0900_ai_ci ENGINE=InnoDB DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from CheckingDocs table:\nID\tName\tLink\n1\t開挖作業安全檢查表\t開挖作業安全檢查表.doc\n2\t露天開挖作業安全檢查表\t露天開挖作業安全檢查表.doc\n3\t一般安衛檢查表\t一般安衛檢查表.doc\n*/\n\n\nCREATE TABLE `CheckingStandardType` (\n\t`ID` INTEGER NOT NULL AUTO_INCREMENT, \n\t`Name` VARCHAR(100) NOT NULL, \n\t`Symbol` VARCHAR(1), \n\tPRIMARY KEY (`ID`)\n)COLLATE utf8mb4_0900_ai_ci ENGINE=InnoDB DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from CheckingStandardType table:\nID\tName\tSymbol\n1\t一般其他類\tA\n2\t墜落防止\tB\n3\t倒塌崩塌防止\tC\n*/\n\n\nCREATE TABLE `CheckingStandard` (\n\t`ID` INTEGER NOT NULL AUTO_INCREMENT, \n\t`Name` VARCHAR(100) NOT NULL, \n\t`TypeID` INTEGER, \n\tPRIMARY KEY (`ID`), \n\tCONSTRAINT checkingstandard_ibfk_1 FOREIGN KEY(`TypeID`) REFERENCES `CheckingStandardType` (`ID`)\n)COLLATE utf8mb4_0900_ai_ci ENGINE=InnoDB DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from CheckingStandard table:\nID\tName\tTypeID\n1\t臨時照明 (日光燈)\t1\n2\t臨時用電 (水銀燈)\t1\n3\t臨時照明 (緊急照明燈)\t1\n*/\n\n\nCREATE TABLE `ConstructionSubConstructionPair` (\n\t`ConstructionID` INTEGER NOT NULL, \n\t`SubConstructionID` INTEGER NOT NULL, \n\t`Sequence` INTEGER, \n\tPRIMARY KEY (`ConstructionID`, `SubConstructionID`), \n\tCONSTRAINT constructionsubconstructionpair_ibfk_1 FOREIGN KEY(`ConstructionID`) REFERENCES `Construction` (`ID`), \n\tCONSTRAINT constructionsubconstructionpair_ibfk_2 FOREIGN KEY(`SubConstructionID`) REFERENCES `SubConstruction` (`ID`)\n)COLLATE utf8mb4_0900_ai_ci ENGINE=InnoDB DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from ConstructionSubConstructionPair table:\nConstructionID\tSubConstructionID\tSequence\n1\t1\t2\n*/\n\n\nCREATE TABLE `Construction` (\n\t`ID` INTEGER NOT NULL AUTO_INCREMENT, \n\t`Name` VARCHAR(100) NOT NULL, \n\tPRIMARY KEY (`ID`)\n)COLLATE utf8mb4_0900_ai_ci ENGINE=InnoDB DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from Construction table:\nID\tName\n1\t大樓工程\n*/\n\n\nCREATE TABLE `SubConstructionDetailCheckingDoc` (\n\t`SubConstructionDetailID` INTEGER NOT NULL, \n\t`CheckingDocID` INTEGER NOT NULL, \n\tPRIMARY KEY (`SubConstructionDetailID`, `CheckingDocID`), \n\tCONSTRAINT subconstructiondetailcheckingdoc_ibfk_1 FOREIGN KEY(`SubConstructionDetailID`) REFERENCES `SubConstructionDetails` (`ID`), \n\tCONSTRAINT subconstructiondetailcheckingdoc_ibfk_2 FOREIGN KEY(`CheckingDocID`) REFERENCES `CheckingDocs` (`ID`)\n)COLLATE utf8mb4_0900_ai_ci ENGINE=InnoDB DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from SubConstructionDetailCheckingDoc table:\nSubConstructionDetailID\tCheckingDocID\n1\t1\n2\t1\n1\t2\n*/\n\n\nCREATE TABLE `SubConstructionDetailCheckingStandard` (\n\t`SubConstructionDetailID` INTEGER NOT NULL, \n\t`CheckingStandardID` INTEGER NOT NULL, \n\tPRIMARY KEY (`SubConstructionDetailID`, `CheckingStandardID`), \n\tCONSTRAINT subconstructiondetailcheckingstandard_ibfk_1 FOREIGN KEY(`SubConstructionDetailID`) REFERENCES `SubConstructionDetails` (`ID`), \n\tCONSTRAINT subconstructiondetailcheckingstandard_ibfk_2 FOREIGN KEY(`CheckingStandardID`) REFERENCES `CheckingStandard` (`ID`)\n)COLLATE utf8mb4_0900_ai_ci ENGINE=InnoDB DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from SubConstructionDetailCheckingStandard table:\nSubConstructionDetailID\tCheckingStandardID\n5\t1\n6\t1\n7\t1\n*/\n\n\nCREATE TABLE `SubConstructionDetails` (\n\t`ID` INTEGER NOT NULL AUTO_INCREMENT, \n\t`Name` VARCHAR(100) NOT NULL, \n\tPRIMARY KEY (`ID`)\n)COLLATE utf8mb4_0900_ai_ci ENGINE=InnoDB DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from SubConstructionDetails table:\nID\tName\n1\t基地整地\n2\t施工便道工程\n3\t安全走廊工程\n*/\n\n\nCREATE TABLE `SubConstructionSubConstructionDetailsPair` (\n\t`SubConstructionID` INTEGER NOT NULL, \n\t`SubConstructionDetailsID` INTEGER NOT NULL, \n\t`Sequence` INTEGER, \n\tPRIMARY KEY (`SubConstructionID`, `SubConstructionDetailsID`), \n\tCONSTRAINT subconstructionsubconstructiondetailspair_ibfk_1 FOREIGN KEY(`SubConstructionID`) REFERENCES `SubConstruction` (`ID`), \n\tCONSTRAINT subconstructionsubconstructiondetailspair_ibfk_2 FOREIGN KEY(`SubConstructionDetailsID`) REFERENCES `SubConstructionDetails` (`ID`)\n)COLLATE utf8mb4_0900_ai_ci ENGINE=InnoDB DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from SubConstructionSubConstructionDetailsPair table:\nSubConstructionID\tSubConstructionDetailsID\tSequence\n1\t1\t1\n1\t2\t2\n1\t3\t3\n*/\n\n\nCREATE TABLE `SubConstruction` (\n\t`ID` INTEGER NOT NULL AUTO_INCREMENT, \n\t`Name` VARCHAR(100) NOT NULL, \n\tPRIMARY KEY (`ID`)\n)COLLATE utf8mb4_0900_ai_ci ENGINE=InnoDB DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from SubConstruction table:\nID\tName\n1\t假設工程\n*/\n\n                Write an initial draft of the query. Then double check the mysql query for common mistakes, including:\n                - Using NOT IN with NULL values\n                - Using UNION when UNION ALL should have been used\n                - Using BETWEEN for exclusive ranges\n                - Data type mismatch in predicates\n                - Properly quoting identifiers\n                - Using the correct number of arguments for functions\n                - Casting to the correct data type\n                - Using the proper columns for joins\n\n                Use format:\n\n                Please output the mysql query only, and don\'t add "\'\'\'sql" in the begining, just output a sql query string only!\n\n                Below are a number of examples of questions and their corresponding SQL queries.\n                \n\nUser input: 大樓工程中的假設工程中的子工程，安全走廊工程需要的檢查表有哪些？\nSQL query:  SELECT `cd`.`Name` AS `CheckingDocName`\n                        FROM `Construction` AS `c`\n                        JOIN `ConstructionSubConstructionPair` AS `cscp` ON `c`.`ID` = `cscp`.`ConstructionID`\n                        JOIN `SubConstruction` AS `sc` ON `cscp`.`SubConstructionID` = `sc`.`ID`\n                        JOIN `SubConstructionSubConstructionDetailsPair` AS `scsdp` ON `sc`.`ID` = `scsdp`.`SubConstructionID`\n                        JOIN `SubConstructionDetails` AS `scd` ON `scsdp`.`SubConstructionDetailsID` = `scd`.`ID`\n                        JOIN `SubConstructionDetailCheckingDoc` AS `scdcd` ON `scd`.`ID` = `scdcd`.`SubConstructionDetailID`\n                        JOIN `CheckingDocs` AS `cd` ON `scdcd`.`CheckingDocID` = `cd`.`ID`\n                        WHERE `c`.`Name` = \'大樓工程\' AND `sc`.`Name` = \'假設工程\' AND `scd`.`Name` = \'安全走廊工程\'\n\nUser input: 大樓工程中的假設工程中的子工程，臨時用電需要的檢查表有哪些？\nSQL query:  SELECT `cd`.`Name` AS `CheckingDocName`\n                        FROM `Construction` AS `c`\n                        JOIN `ConstructionSubConstructionPair` AS `cscp` ON `c`.`ID` = `cscp`.`ConstructionID`\n                        JOIN `SubConstruction` AS `sc` ON `cscp`.`SubConstructionID` = `sc`.`ID`\n                        JOIN `SubConstructionSubConstructionDetailsPair` AS `scsdp` ON `sc`.`ID` = `scsdp`.`SubConstructionID`\n                        JOIN `SubConstructionDetails` AS `scd` ON `scsdp`.`SubConstructionDetailsID` = `scd`.`ID`\n                        JOIN `SubConstructionDetailCheckingDoc` AS `scdcd` ON `scd`.`ID` = `scdcd`.`SubConstructionDetailID`\n                        JOIN `CheckingDocs` AS `cd` ON `scdcd`.`CheckingDocID` = `cd`.`ID`\n                        WHERE `c`.`Name` = \'大樓工程\' AND `sc`.`Name` = \'假設工程\' AND `scd`.`Name` = \'臨時用電\'\n\nUser input: 大樓工程中的假設工程中的子工程，\'安全圍籬工程\'需要做的檢查有哪些？\nSQL query:  SELECT `Name` FROM `CheckingStandard` WHERE `ID` IN (SELECT `CheckingStandardID` FROM `SubConstructionDetailCheckingStandard` WHERE `SubConstructionDetailID` = (SELECT `ID` FROM `SubConstructionDetails` WHERE `Name` = \'安全圍籬工程\'))\n\nUser input: 大樓工程中的假設工程中的子工程，施工便道工程需要的檢查表有哪些？\nSQLQuery: \nSQL query: ', 'role': 'user'}], 'model': 'gpt-3.5-turbo', 'logprobs': False, 'n': 1, 'stop': ['\nSQLResult:'], 'stream': False, 'temperature': 0.3}}
2024-09-18 11:18:28,380 - openai._base_client - DEBUG - Sending HTTP Request: POST https://generevo-eastus-oai.openai.azure.com//openai/deployments/gpt-4o/chat/completions?api-version=2024-02-01
2024-09-18 11:18:28,383 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-09-18 11:18:28,395 - httpcore.http11 - DEBUG - send_request_headers.complete
2024-09-18 11:18:28,396 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-09-18 11:18:28,399 - httpcore.http11 - DEBUG - send_request_body.complete
2024-09-18 11:18:28,399 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-09-18 11:18:35,847 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Content-Length', b'1685'), (b'Content-Type', b'application/json'), (b'x-ms-region', b'East US'), (b'apim-request-id', b'45dbaa76-a4ea-4367-8b62-ee8ce8a64b68'), (b'x-ratelimit-remaining-requests', b'6'), (b'x-accel-buffering', b'no'), (b'x-ms-rai-invoked', b'true'), (b'x-request-id', b'738e641d-47e9-4a2c-99cf-69bf018389cf'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'azureml-model-session', b'd066-20240813153442'), (b'x-content-type-options', b'nosniff'), (b'x-envoy-upstream-service-time', b'7229'), (b'x-ms-client-request-id', b'45dbaa76-a4ea-4367-8b62-ee8ce8a64b68'), (b'x-ratelimit-remaining-tokens', b'4910'), (b'Date', b'Wed, 18 Sep 2024 03:18:35 GMT')])
2024-09-18 11:18:35,848 - httpx - INFO - HTTP Request: POST https://generevo-eastus-oai.openai.azure.com//openai/deployments/gpt-4o/chat/completions?api-version=2024-02-01 "HTTP/1.1 200 OK"
2024-09-18 11:18:35,848 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-09-18 11:18:35,849 - httpcore.http11 - DEBUG - receive_response_body.complete
2024-09-18 11:18:35,849 - httpcore.http11 - DEBUG - response_closed.started
2024-09-18 11:18:35,849 - httpcore.http11 - DEBUG - response_closed.complete
2024-09-18 11:18:35,850 - openai._base_client - DEBUG - HTTP Response: POST https://generevo-eastus-oai.openai.azure.com//openai/deployments/gpt-4o/chat/completions?api-version=2024-02-01 "200 OK" Headers({'content-length': '1685', 'content-type': 'application/json', 'x-ms-region': 'East US', 'apim-request-id': '45dbaa76-a4ea-4367-8b62-ee8ce8a64b68', 'x-ratelimit-remaining-requests': '6', 'x-accel-buffering': 'no', 'x-ms-rai-invoked': 'true', 'x-request-id': '738e641d-47e9-4a2c-99cf-69bf018389cf', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'azureml-model-session': 'd066-20240813153442', 'x-content-type-options': 'nosniff', 'x-envoy-upstream-service-time': '7229', 'x-ms-client-request-id': '45dbaa76-a4ea-4367-8b62-ee8ce8a64b68', 'x-ratelimit-remaining-tokens': '4910', 'date': 'Wed, 18 Sep 2024 03:18:35 GMT'})
2024-09-18 11:18:35,850 - openai._base_client - DEBUG - request_id: 738e641d-47e9-4a2c-99cf-69bf018389cf
2024-09-18 11:18:35,876 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'headers': {'api-key': 'b6133f8c130a4d659443d29871845c80'}, 'files': None, 'json_data': {'messages': [{'content': 'Given the following user question, and SQL result, answer the user question in Traditional Chinese.\n            If the result is empty, it means that there\'s no data according to the question. Please answer NO with relevent question.\n            For example, question "How many classes does Jason need to go on Monday?", if the reslt is empty, you shoiuld answer like \n            "Jason has no class on Monday."\n\n    Question: 大樓工程中的假設工程中的子工程，施工便道工程需要的檢查表有哪些？\n    SQL Result: [(\'開挖作業安全檢查表\',), (\'露天開挖作業安全檢查表\',), (\'一般安衛檢查表\',)]\n    Answer: ', 'role': 'user'}], 'model': 'gpt-3.5-turbo', 'logprobs': False, 'n': 1, 'stream': False, 'temperature': 0.3}}
2024-09-18 11:18:35,877 - openai._base_client - DEBUG - Sending HTTP Request: POST https://generevo-eastus-oai.openai.azure.com//openai/deployments/gpt-4o/chat/completions?api-version=2024-02-01
2024-09-18 11:18:35,877 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-09-18 11:18:35,878 - httpcore.http11 - DEBUG - send_request_headers.complete
2024-09-18 11:18:35,878 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-09-18 11:18:35,878 - httpcore.http11 - DEBUG - send_request_body.complete
2024-09-18 11:18:35,879 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-09-18 11:18:36,965 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Content-Length', b'995'), (b'Content-Type', b'application/json'), (b'x-ms-region', b'East US'), (b'apim-request-id', b'faf4a5ac-142a-4014-ba9c-8933ef696e12'), (b'x-ratelimit-remaining-requests', b'7'), (b'x-accel-buffering', b'no'), (b'x-ms-rai-invoked', b'true'), (b'x-request-id', b'87dad0cd-7c3d-47eb-83c8-4052f0762eef'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'azureml-model-session', b'd054-20240903081652'), (b'x-content-type-options', b'nosniff'), (b'x-envoy-upstream-service-time', b'887'), (b'x-ms-client-request-id', b'faf4a5ac-142a-4014-ba9c-8933ef696e12'), (b'x-ratelimit-remaining-tokens', b'4135'), (b'Date', b'Wed, 18 Sep 2024 03:18:36 GMT')])
2024-09-18 11:18:36,966 - httpx - INFO - HTTP Request: POST https://generevo-eastus-oai.openai.azure.com//openai/deployments/gpt-4o/chat/completions?api-version=2024-02-01 "HTTP/1.1 200 OK"
2024-09-18 11:18:36,966 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-09-18 11:18:36,967 - httpcore.http11 - DEBUG - receive_response_body.complete
2024-09-18 11:18:36,967 - httpcore.http11 - DEBUG - response_closed.started
2024-09-18 11:18:36,967 - httpcore.http11 - DEBUG - response_closed.complete
2024-09-18 11:18:36,967 - openai._base_client - DEBUG - HTTP Response: POST https://generevo-eastus-oai.openai.azure.com//openai/deployments/gpt-4o/chat/completions?api-version=2024-02-01 "200 OK" Headers({'content-length': '995', 'content-type': 'application/json', 'x-ms-region': 'East US', 'apim-request-id': 'faf4a5ac-142a-4014-ba9c-8933ef696e12', 'x-ratelimit-remaining-requests': '7', 'x-accel-buffering': 'no', 'x-ms-rai-invoked': 'true', 'x-request-id': '87dad0cd-7c3d-47eb-83c8-4052f0762eef', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'azureml-model-session': 'd054-20240903081652', 'x-content-type-options': 'nosniff', 'x-envoy-upstream-service-time': '887', 'x-ms-client-request-id': 'faf4a5ac-142a-4014-ba9c-8933ef696e12', 'x-ratelimit-remaining-tokens': '4135', 'date': 'Wed, 18 Sep 2024 03:18:36 GMT'})
2024-09-18 11:18:36,968 - openai._base_client - DEBUG - request_id: 87dad0cd-7c3d-47eb-83c8-4052f0762eef
